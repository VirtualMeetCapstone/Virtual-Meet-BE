name: Build and Analyze

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Đảm bảo clone đầy đủ để Sonar nhận diện file thay đổi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Clear SonarQube Cache
        run: Remove-Item -Path ~\.sonar\cache -Recurse -Force -ErrorAction Ignore

      - name: Cache SonarQube Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          if (-Not (Test-Path ".\.sonar\scanner")) {
            New-Item -Path .\.sonar\scanner -ItemType Directory
          }
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and Analyze with SonarQube
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"Virtual-Meet-BE" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" `
            /d:sonar.scm.provider=git `
            /d:sonar.verbose=true `
            /d:sonar.sources="src" `
            /d:sonar.exclusions="**/bin/**,**/obj/**"

          dotnet build ./src/GOCAP.sln

          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

